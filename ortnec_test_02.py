import unittest
import requests
import json

import jsonschema



class TestRestApi(unittest.TestCase):

	@classmethod
	def setUpClass(self):
		# declare global variables, common properties for TestCase.
		self.RestApiUrl  = "https://jsonplaceholder.typicode.com/users"
		self.RestApiResponse = requests.get(self.RestApiUrl)

		# generated by https://jsonschema.net/
		self.JsonSchema = open("ortnec_test_02.schema.json").read()

	#########################################
	def test_VerifyApiResponse_JsonCorrectness(self):
		try:
			jsonschema.validate(json.loads(self.RestApiResponse.text), json.loads(self.JsonSchema))
		except Exception:
			self.assertFalse(True,  "ERROR: JSON is invalid")

	#########################################
	def test_VerifyApiResponse_NumberJsonObjects(self):
			self.assertEqual("10",  str(len(json.loads(self.RestApiResponse.text))), "ERROR: Number of Objects must be 10.")

	#########################################
	def test_VerifyApiResponse_ResponseCorrectness(self):
		self.assertEqual("200", str(self.RestApiResponse.status_code), "ERROR: Response code must be 200.")

##########################
if __name__ == '__main__':
   unittest.main(warnings='ignore')
